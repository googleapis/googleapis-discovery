#o This file was automatically generated by BuildFileGenerator

# This is an API workspace, having public visibility by default makes perfect sense.
package(default_visibility = ["//visibility:public"])

##############################################################################
# Discovery
##############################################################################
load(
    "@com_google_disco_to_proto3_converter//rules_gapic:disco_to_proto.bzl",
    "proto_from_disco",
)

proto_from_disco(
    name = "compute_small",
    src = "compute.v1.small.json",
)

proto_from_disco(
    name = "compute",
    src = "compute.v1.json",
    message_ignorelist = [
        "HttpHealthCheck",
        "HttpsHealthCheck",
        "HttpHealthCheckList",
        "HttpsHealthCheckList",
        "GetHttpHealthCheckRequest",
        "GetHttpsHealthCheckRequest",
        "PatchHttpHealthCheckRequest",
        "PatchHttpsHealthCheckRequest",
        "UpdateHttpHealthCheckRequest",
        "UpdateHttpsHealthCheckRequest",
        "InsertHttpHealthCheckRequest",
        "InsertHttpsHealthCheckRequest",
        "ListHttpHealthChecksRequest",
        "ListHttpsHealthChecksRequest",
        "DeleteHttpHealthCheckRequest",
        "DeleteHttpsHealthCheckRequest",
    ],
    service_ignorelist = [
        "HttpHealthChecks",
        "HttpsHealthChecks",
    ],
)

##############################################################################
# Common
##############################################################################
load("@rules_proto//proto:defs.bzl", "proto_library")
load("@com_google_googleapis_imports//:imports.bzl", "proto_library_with_info")

proto_library(
    name = "compute_proto",
    srcs = [
        "compute.proto",
    ],
    deps = [
        "@com_google_googleapis//google/api:annotations_proto",
        "@com_google_googleapis//google/api:client_proto",
        "@com_google_googleapis//google/api:field_behavior_proto",
        "@com_google_googleapis//google/api:resource_proto",
    ],
)

proto_library_with_info(
    name = "compute_proto_with_info",
    deps = [
        ":compute_proto",
        "@com_google_googleapis//google/cloud:common_resources_proto",
    ],
)

proto_library(
    name = "compute_small_proto",
    srcs = [
        "compute_small.proto",
    ],
    deps = [
        "@com_google_googleapis//google/api:annotations_proto",
        "@com_google_googleapis//google/api:client_proto",
        "@com_google_googleapis//google/api:field_behavior_proto",
        "@com_google_googleapis//google/api:resource_proto",
        "@com_google_googleapis//google/longrunning:operations_proto",
        "@com_google_protobuf//:descriptor_proto",
    ],
)

proto_library_with_info(
    name = "compute_small_proto_with_info",
    deps = [
        ":compute_small_proto",
        "@com_google_googleapis//google/cloud:common_resources_proto",
    ],
)

##############################################################################
# Java
##############################################################################
load(
    "@com_google_googleapis_imports//:imports.bzl",
    java_gapic_assembly_gradle_pkg = "java_gapic_assembly_gradle_pkg_legacy",
    java_gapic_library = "java_gapic_library_legacy",
    java_gapic_test = "java_gapic_test_legacy",
    "java_proto_library",
)

java_proto_library(
    name = "compute_java_proto",
    deps = [":compute_proto"],
)

java_gapic_library(
    name = "compute_java_gapic",
    src = ":compute_proto_with_info",
    gapic_yaml = "compute_gapic.yaml",
    package = "google.cloud.compute.v1",
    service_yaml = "compute_v1.yaml",
    transport = "rest",
    test_deps = [],
    deps = [
        ":compute_java_proto",
    ],
)

java_gapic_test(
    name = "compute_java_gapic_test_suite",
    test_classes = [
        "com.google.cloud.compute.v1.AcceleratorTypesClientTest",
        "com.google.cloud.compute.v1.AddressesClientTest",
        "com.google.cloud.compute.v1.AutoscalersClientTest",
        "com.google.cloud.compute.v1.BackendBucketsClientTest",
        "com.google.cloud.compute.v1.BackendServicesClientTest",
        "com.google.cloud.compute.v1.DiskTypesClientTest",
        "com.google.cloud.compute.v1.DisksClientTest",
        "com.google.cloud.compute.v1.ExternalVpnGatewaysClientTest",
        "com.google.cloud.compute.v1.FirewallsClientTest",
        "com.google.cloud.compute.v1.ForwardingRulesClientTest",
        "com.google.cloud.compute.v1.GlobalAddressesClientTest",
        "com.google.cloud.compute.v1.GlobalForwardingRulesClientTest",
        "com.google.cloud.compute.v1.GlobalNetworkEndpointGroupsClientTest",
        "com.google.cloud.compute.v1.GlobalOperationsClientTest",
        "com.google.cloud.compute.v1.HealthChecksClientTest",
        "com.google.cloud.compute.v1.ImagesClientTest",
        "com.google.cloud.compute.v1.InstanceGroupManagersClientTest",
        "com.google.cloud.compute.v1.InstanceGroupsClientTest",
        "com.google.cloud.compute.v1.InstanceTemplatesClientTest",
        "com.google.cloud.compute.v1.InstancesClientTest",
        "com.google.cloud.compute.v1.InterconnectAttachmentsClientTest",
        "com.google.cloud.compute.v1.InterconnectLocationsClientTest",
        "com.google.cloud.compute.v1.InterconnectsClientTest",
        "com.google.cloud.compute.v1.LicenseCodesClientTest",
        "com.google.cloud.compute.v1.LicensesClientTest",
        "com.google.cloud.compute.v1.MachineTypesClientTest",
        "com.google.cloud.compute.v1.NetworkEndpointGroupsClientTest",
        "com.google.cloud.compute.v1.NetworksClientTest",
        "com.google.cloud.compute.v1.NodeGroupsClientTest",
        "com.google.cloud.compute.v1.NodeTemplatesClientTest",
        "com.google.cloud.compute.v1.NodeTypesClientTest",
        "com.google.cloud.compute.v1.PacketMirroringsClientTest",
        "com.google.cloud.compute.v1.ProjectsClientTest",
        "com.google.cloud.compute.v1.RegionAutoscalersClientTest",
        "com.google.cloud.compute.v1.RegionBackendServicesClientTest",
        "com.google.cloud.compute.v1.RegionCommitmentsClientTest",
        "com.google.cloud.compute.v1.RegionDiskTypesClientTest",
        "com.google.cloud.compute.v1.RegionDisksClientTest",
        "com.google.cloud.compute.v1.RegionHealthCheckServicesClientTest",
        "com.google.cloud.compute.v1.RegionHealthChecksClientTest",
        "com.google.cloud.compute.v1.RegionInstanceGroupManagersClientTest",
        "com.google.cloud.compute.v1.RegionInstanceGroupsClientTest",
        "com.google.cloud.compute.v1.RegionNotificationEndpointsClientTest",
        "com.google.cloud.compute.v1.RegionOperationsClientTest",
        "com.google.cloud.compute.v1.RegionSslCertificatesClientTest",
        "com.google.cloud.compute.v1.RegionTargetHttpProxiesClientTest",
        "com.google.cloud.compute.v1.RegionTargetHttpsProxiesClientTest",
        "com.google.cloud.compute.v1.RegionUrlMapsClientTest",
        "com.google.cloud.compute.v1.RegionsClientTest",
        "com.google.cloud.compute.v1.ReservationsClientTest",
        "com.google.cloud.compute.v1.ResourcePoliciesClientTest",
        "com.google.cloud.compute.v1.RoutersClientTest",
        "com.google.cloud.compute.v1.RoutesClientTest",
        "com.google.cloud.compute.v1.SecurityPoliciesClientTest",
        "com.google.cloud.compute.v1.SnapshotsClientTest",
        "com.google.cloud.compute.v1.SslCertificatesClientTest",
        "com.google.cloud.compute.v1.SslPoliciesClientTest",
        "com.google.cloud.compute.v1.SubnetworksClientTest",
        "com.google.cloud.compute.v1.TargetHttpProxiesClientTest",
        "com.google.cloud.compute.v1.TargetHttpsProxiesClientTest",
        "com.google.cloud.compute.v1.TargetInstancesClientTest",
        "com.google.cloud.compute.v1.TargetPoolsClientTest",
        "com.google.cloud.compute.v1.TargetSslProxiesClientTest",
        "com.google.cloud.compute.v1.TargetTcpProxiesClientTest",
        "com.google.cloud.compute.v1.TargetVpnGatewaysClientTest",
        "com.google.cloud.compute.v1.UrlMapsClientTest",
        "com.google.cloud.compute.v1.VpnGatewaysClientTest",
        "com.google.cloud.compute.v1.VpnTunnelsClientTest",
        "com.google.cloud.compute.v1.ZoneOperationsClientTest",
        "com.google.cloud.compute.v1.ZonesClientTest",
    ],
    runtime_deps = [":compute_java_gapic_test"],
)

# Open Source Packages
java_gapic_assembly_gradle_pkg(
    name = "google-cloud-compute-v1-java",
    transport = "rest",
    deps = [
        ":compute_java_gapic",
        ":compute_java_proto",
        ":compute_proto",
    ],
)

# Java Compute Small (for testing and prototyping purposes)
java_proto_library(
    name = "compute_small_java_proto",
    deps = [":compute_small_proto"],
)

java_gapic_library(
    name = "compute_small_java_gapic",
    src = ":compute_small_proto_with_info",
    gapic_yaml = "compute_gapic.yaml",
    package = "google.cloud.compute.v1",
    service_yaml = "compute_small_v1.yaml",
    transport = "rest",
    test_deps = [],
    deps = [
        ":compute_small_java_proto",
    ],
)

#java_gapic_test(
#    name = "compute_small_java_gapic_test_suite",
#    test_classes = [
#        "com.google.cloud.compute.v1.AddressesClientTest",
#    ],
#    runtime_deps = [":compute_small_java_gapic_test"],
#)

# Open Source Packages
java_gapic_assembly_gradle_pkg(
    name = "google-cloud-compute-small-v1-java",
    transport = "rest",
    deps = [
        ":compute_small_java_gapic",
        ":compute_small_java_proto",
        ":compute_small_proto",
    ],
)

##############################################################################
# PHP
##############################################################################
load(
    "@com_google_googleapis_imports//:imports.bzl",
    php_gapic_assembly_pkg = "php_gapic_assembly_pkg",
    php_gapic_library = "php_gapic_library",
    php_proto_library = "php_proto_library",
)

php_proto_library(
    name = "compute_php_proto",
    deps = [":compute_proto"],
)

php_gapic_library(
    name = "compute_php_gapic",
    src = ":compute_proto_with_info",
    gapic_yaml = "compute_gapic.yaml",
    package = "google.cloud.compute.v1",
    service_yaml = "compute_v1.yaml",
    deps = [
        ":compute_php_proto",
    ],
)

# Open Source Packages
php_gapic_assembly_pkg(
    name = "google-cloud-compute-v1-php",
    deps = [
        ":compute_php_gapic",
        ":compute_php_proto",
    ],
)

##############################################################################
# Node.js
##############################################################################
load(
    "@com_google_googleapis_imports//:imports.bzl",
    "nodejs_gapic_assembly_pkg",
    "nodejs_gapic_library",
)

nodejs_gapic_library(
    name = "compute_nodejs_gapic",
    package_name = "@google-cloud/compute",
    src = ":compute_proto_with_info",
    extra_protoc_parameters = ["metadata"],
    deps = [],
)

nodejs_gapic_assembly_pkg(
    name = "compute-v1-nodejs",
    deps = [
        ":compute_nodejs_gapic",
        ":compute_proto",
    ],
)

# Node.js Compute Small (for testing and prototyping purposes)
nodejs_gapic_library(
    name = "compute_small_nodejs_gapic",
    package_name = "@google-cloud/compute-small",
    src = ":compute_small_proto_with_info",
    extra_protoc_parameters = ["metadata"],
    deps = [],
)

nodejs_gapic_assembly_pkg(
    name = "compute-small-v1-nodejs",
    deps = [
        ":compute_small_nodejs_gapic",
        ":compute_small_proto",
    ],
)
